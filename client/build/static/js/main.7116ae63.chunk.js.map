{"version":3,"sources":["views/EditPet.module.scss","views/CreatePet.module.scss","views/CreatePet.jsx","views/ListPets.jsx","views/DetailsPet.jsx","views/EditPet.jsx","App.js","reportWebVitals.js","index.js","views/DetailsPet.module.scss","views/ListPets.module.scss"],"names":["module","exports","CreatePet","history","useHistory","SignupSchema","Yup","shape","petName","min","max","required","petType","petDescription","Skill1","Skill2","Skill3","createPet","values","a","console","log","axios","post","response","Swal","fire","title","text","icon","confirmButtonText","push","data","err","message","className","styles","linkNav","to","header","createPetContainer","initialValues","skill1","skill2","skill3","validationSchema","onSubmit","errors","touched","formAdd","htmlFor","name","type","addButton","ListPets","useState","petsList","setPetsList","getAllPets","get","pets","useEffect","map","pet","index","_id","DetailsPet","id","useParams","setPet","getPetById","deletePet","delete","detailsButton","onClick","detailPetContainer","skills","EditPet","editPet","put","editPetContainer","enableReinitialize","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,QAAU,yBAAyB,QAAU,yBAAyB,UAAY,6B,mBCAzJD,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,MAAQ,yBAAyB,QAAU,2BAA2B,UAAY,6BAA6B,QAAU,6B,4MCuHvLC,EA9GG,WAEd,IAAMC,EAAUC,cAGVC,EAAeC,MAAaC,MAAM,CACpCC,QAASF,MACJG,IAAI,EAAG,4CACPC,IAAI,GAAI,gDACRC,SAAS,YACdC,QAASN,MACJG,IAAI,EAAG,4CACPE,SAAS,2BACdE,eAAgBP,MACXG,IAAI,EAAG,uCACPE,SAAS,2BACdG,OAAQR,MACRS,OAAQT,MACRU,OAAQV,QAKNW,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACdC,QAAQC,IAAR,4BAAiCH,IADnB,kBAGaI,IAAMC,KAAK,iCAAkCL,GAH1D,OAGJM,EAHI,OAIVJ,QAAQC,IAAR,oBAAyBG,EAAShB,UAClCiB,IAAKC,KAAK,CACNC,MAAO,wCACPC,KAAK,cACLC,KAAM,UACNC,kBAAmB,SAEvB3B,EAAQ4B,KAAK,KAXH,kDAaVX,QAAQC,IAAI,KAAIG,SAASQ,KAAKC,IAAIC,SAClCT,IAAKC,KAAK,CACNC,MAAO,SACPC,KAAK,GAAD,OAAK,KAAIJ,SAASQ,KAAKC,IAAIC,SAC/BL,KAAM,QACNC,kBAAmB,aAlBb,0DAAH,sDAyBf,OACI,gCACI,cAAC,IAAD,CAAMK,UAAWC,IAAOC,QAASC,GAAG,IAApC,0BACA,sBAAKH,UAAWC,IAAOG,OAAvB,UACI,6CACA,+DAGJ,qBAAKJ,UAAWC,IAAOI,mBAAvB,SACI,cAAC,IAAD,CACIC,cAAe,CACXjC,QAAS,GACTI,QAAS,GACTC,eAAgB,GAChB6B,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAEZC,iBAAkBxC,EAClByC,SAAU7B,EAVd,SAaK,gBAAG8B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACG,eAAC,IAAD,CAAMb,UAAWC,IAAOa,QAAxB,UACI,uBAAOC,QAAQ,UAAf,wBACA,cAAC,IAAD,CAAOC,KAAK,YACXJ,EAAOvC,SAAWwC,EAAQxC,QAAW,qBAAK2B,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOvC,UAAkB,KAE/F,uBAAO0C,QAAQ,UAAf,wBACA,cAAC,IAAD,CAAOC,KAAK,YACXJ,EAAOnC,SAAWoC,EAAQpC,QAAW,qBAAKuB,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOnC,UAAkB,KAE/F,uBAAOsC,QAAQ,iBAAf,2BACA,cAAC,IAAD,CAAOC,KAAK,iBAAiBC,KAAK,SACjCL,EAAOlC,gBAAkBmC,EAAQnC,eAAiB,qBAAKsB,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOlC,iBAAwB,KAGlH,uBAAOqC,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOL,QAAUM,EAAQN,OAAU,qBAAKP,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOL,SAAiB,KAE5F,uBAAOQ,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOJ,QAAUK,EAAQL,OAAU,qBAAKR,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOJ,SAAiB,KAG5F,uBAAOO,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOH,QAAUI,EAAQJ,OAAU,qBAAKT,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOH,SAAiB,KAE5F,wBAAQT,UAAWC,IAAOiB,UAAWD,KAAK,SAA1C,iC,yBCzCbE,EA7DE,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACZC,EADY,KACFC,EADE,KAIbC,EAAU,uCAAG,4BAAAvC,EAAA,+EAEYG,IAAMqC,IAAI,8BAFtB,OAELnC,EAFK,OAGXJ,QAAQC,IAAIG,EAASQ,KAAK4B,MAC1BH,EAAYjC,EAASQ,KAAK4B,MAJf,gDAOXxC,QAAQC,IAAR,MAPW,yDAAH,qDAkBhB,OAPAwC,qBAAU,WACNH,MAED,IAKC,gCACI,cAAC,IAAD,CAAMvB,UAAWC,IAAOC,QAASC,GAAG,YAApC,wCACA,sBAAKH,UAAWC,IAAOG,OAAvB,UACI,6CACA,2EAMA,kCACI,+BACI,sCACA,sCACA,6CAJR,OAOQiB,QAPR,IAOQA,OAPR,EAOQA,EAAUM,KAAI,SAACC,EAAKC,GAAN,OACV,+BACI,6BAAKD,EAAIvD,UACT,6BAAKuD,EAAInD,UACT,+BACI,cAAC,IAAD,CAAM0B,GAAE,gBAAWyB,EAAIE,KAAvB,qBADJ,OAEI,cAAC,IAAD,CAAM3B,GAAE,gBAAWyB,EAAIE,IAAf,SAAR,yBALCF,EAAIE,e,iBCkC1BC,EAzEI,WAAO,IACdC,EAAOC,cAAPD,GADa,EAECZ,mBAAS,IAFV,mBAEdQ,EAFc,KAETM,EAFS,KAIfC,EAAU,uCAAG,4BAAAnD,EAAA,6DACfC,QAAQC,IAAR,cAAmB8C,IADJ,kBAGY7C,IAAMqC,IAAN,qCAAwCQ,IAHpD,OAGL3C,EAHK,OAIXJ,QAAQC,IAAR,wBAA6BG,EAASQ,OACtCqC,EAAO7C,EAASQ,KAAK+B,KALV,gDAOX3C,QAAQC,IAAR,MAPW,yDAAH,qDAWhBwC,qBAAU,WACNS,MACD,CAACH,IAIJ,IAAMI,EAAS,uCAAG,WAAOJ,GAAP,eAAAhD,EAAA,6DACdC,QAAQC,IAAI8C,GADE,kBAGa7C,IAAMkD,OAAN,qCAA2CL,IAHxD,OAGJ3C,EAHI,OAIVJ,QAAQC,IAAIG,GACZC,IAAKC,KAAK,CACNC,MAAO,0BACPC,KAAM,yBACNC,KAAM,YARA,gDAaVT,QAAQC,IAAR,MAbU,yDAAH,sDAkBf,OACI,gCACI,cAAC,IAAD,CAAMc,UAAWC,IAAOC,QAASC,GAAG,IAApC,0BAEA,sBAAKH,UAAWC,IAAOG,OAAvB,UACI,gCACI,6CACA,iDAAoBwB,EAAIvD,QAAxB,UAGJ,8BACI,yBAAQ2B,UAAWC,IAAOqC,cAAeC,QAAS,kBAAMH,EAAUR,EAAIE,MAAtE,mBAAmFF,EAAIvD,gBAK/F,sBAAK2B,UAAWC,IAAOuC,mBAAvB,UACI,4CAAeZ,EAAInD,QAAnB,OACA,+CAAkBmD,EAAIlD,eAAtB,OACA,sBAAKsB,UAAWC,IAAOwC,OAAvB,UACI,yCACA,gCACI,4BAAIb,EAAIrB,SACR,4BAAIqB,EAAIpB,SACR,4BAAIoB,EAAInB,sB,iBCsEjBiC,EAnIC,WAAO,IACXV,EAAOC,cAAPD,GADU,EAEIZ,mBAAS,IAFb,mBAEXQ,EAFW,KAENM,EAFM,KAGZlE,EAAUC,cAEVkE,EAAU,uCAAG,4BAAAnD,EAAA,6DACfC,QAAQC,IAAR,cAAmB8C,IADJ,kBAGY7C,IAAMqC,IAAN,qCAAwCQ,IAHpD,OAGL3C,EAHK,OAIX6C,EAAO7C,EAASQ,KAAK+B,KACrB3C,QAAQC,IAAI,MAAO0C,GALR,gDAOX3C,QAAQC,IAAR,MAPW,yDAAH,qDAWhBwC,qBAAU,WACNzC,QAAQC,IAAI,aACZiD,MACD,CAACH,IAGJ,IAAM9D,EAAeC,MAAaC,MAAM,CACpCC,QAASF,MACJG,IAAI,EAAG,8CACPC,IAAI,GAAI,gDACRC,SAAS,YACdC,QAASN,MACJG,IAAI,EAAG,8CACPE,SAAS,2BACdE,eAAgBP,MACXG,IAAI,EAAG,uCACPE,SAAS,2BACdG,OAAQR,MACRS,OAAQT,MACRU,OAAQV,QAKNwE,EAAO,uCAAG,WAAO5D,GAAP,eAAAC,EAAA,6DACZC,QAAQC,IAAR,4BAAiCH,IADrB,kBAGeI,IAAMyD,IAAN,qCAAwCZ,GAAMjD,GAH7D,OAGFM,EAHE,OAIRJ,QAAQC,IAAR,oBAAyBG,EAAShB,UAClCiB,IAAKC,KAAK,CACNC,MAAO,qCACPC,KAAK,cACLC,KAAM,UACNC,kBAAmB,SAEvB3B,EAAQ4B,KAAK,KAXL,kDAaRX,QAAQC,IAAI,KAAIG,SAASQ,KAAKC,IAAIC,SAClCT,IAAKC,KAAK,CACNC,MAAO,SACPC,KAAK,GAAD,OAAK,KAAIJ,SAASQ,KAAKC,IAAIC,SAC/BL,KAAM,QACNC,kBAAmB,aAlBf,0DAAH,sDAyBb,OACI,gCACI,cAAC,IAAD,CAAMK,UAAWC,IAAOC,QAASC,GAAG,IAApC,0BACA,sBAAKH,UAAWC,IAAOG,OAAvB,UACI,6CACA,uCAAUwB,EAAIvD,cAIlB,qBAAK2B,UAAWC,IAAO4C,iBAAvB,SAGQjB,GACI,cAAC,IAAD,CAAQ5B,UAAWC,IAAOa,QACtBgC,oBAAoB,EACpBxC,cAAesB,EACflB,iBAAkBxC,EAClByC,SAAUgC,EAJd,SAOK,gBAAG/B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACG,eAAC,IAAD,CAAMb,UAAWC,IAAOa,QAAxB,UACI,uBAAOC,QAAQ,UAAf,wBACA,cAAC,IAAD,CAAOC,KAAK,YACXJ,EAAOvC,SAAWwC,EAAQxC,QAAW,qBAAK2B,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOvC,UAAkB,KAE/F,uBAAO0C,QAAQ,UAAf,wBACA,cAAC,IAAD,CAAOC,KAAK,YACXJ,EAAOnC,SAAWoC,EAAQpC,QAAW,qBAAKuB,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOnC,UAAkB,KAE/F,uBAAOsC,QAAQ,iBAAf,2BACA,cAAC,IAAD,CAAOC,KAAK,iBAAiBC,KAAK,SACjCL,EAAOlC,gBAAkBmC,EAAQnC,eAAiB,qBAAKsB,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOlC,iBAAwB,KAGlH,uBAAOqC,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOL,QAAUM,EAAQN,OAAU,qBAAKP,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOL,SAAiB,KAE5F,uBAAOQ,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOJ,QAAUK,EAAQL,OAAU,qBAAKR,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOJ,SAAiB,KAG5F,uBAAOO,QAAQ,SAAf,uBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SACzBL,EAAOH,QAAUI,EAAQJ,OAAU,qBAAKT,UAAWC,IAAOW,OAAvB,SAAgCA,EAAOH,SAAiB,KAE5F,wBAAST,UAAWC,IAAOiB,UAAWD,KAAK,SAA3C,kCCzFrB8B,EA3BH,WACV,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,EAAD,cCbGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBCfArF,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,cAAgB,kCAAkC,WAAa,+BAA+B,OAAS,2BAA2B,QAAU,8B,mBCA1ND,EAAOC,QAAU,CAAC,QAAU,6B","file":"static/js/main.7116ae63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editPetContainer\":\"EditPet_editPetContainer__3FoMz\",\"linkNav\":\"EditPet_linkNav__thvf7\",\"formAdd\":\"EditPet_formAdd__E5KIX\",\"addButton\":\"EditPet_addButton__1lyTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPetContainer\":\"CreatePet_createPetContainer__tLjYC\",\"form1\":\"CreatePet_form1__2IcCA\",\"formAdd\":\"CreatePet_formAdd__1HnVU\",\"addButton\":\"CreatePet_addButton__2k4it\",\"linkNav\":\"CreatePet_linkNav__1KXWE\"};","import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from 'formik';\nimport styles from \"./CreatePet.module.scss\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\n\n\nconst CreatePet = () => {\n\n    const history = useHistory();\n\n\n    const SignupSchema = Yup.object().shape({\n        petName: Yup.string()\n            .min(3, 'Name debe tener 3 caracteres como minimo')\n            .max(50, 'Nombre debe tener un maximo de 50 caracteres')\n            .required('Required'),\n        petType: Yup.string()\n            .min(3, 'Type debe tener 3 caracteres como minimo')\n            .required('Este campo es requerido'),\n        petDescription: Yup.string()\n            .min(3, 'Descripcion debe tener 3 caracteres')\n            .required('Este campo es requerido'),\n        Skill1: Yup.string(),\n        Skill2: Yup.string(),\n        Skill3: Yup.string()\n\n    });\n\n\n    const createPet = async (values) => {\n        console.log(`createPet values: ${values}`);\n        try {\n            const response = await axios.post(\"http://localhost:8000/pets/new\", values);\n            console.log(`response: ${response.petName}`);\n            Swal.fire({\n                title: \"Mascota registrada satisfactoriamente\",\n                text: `Bienvenido `,\n                icon: \"success\",\n                confirmButtonText: \"Cool\"\n            });\n            history.push(\"/\");\n        } catch (err) {\n            console.log(err.response.data.err.message);\n            Swal.fire({\n                title: \"Error!\",\n                text: `${err.response.data.err.message}`,\n                icon: \"error\",\n                confirmButtonText: \"Not Cool\"\n            }\n            )\n        }\n    }\n\n\n    return (\n        <div >\n            <Link className={styles.linkNav} to=\"/\">back to home</Link>\n            <div className={styles.header}>\n                <h1>Pet Shelter</h1>\n                <h2>Know a pet needing a home?</h2>\n            </div>\n\n            <div className={styles.createPetContainer}>\n                <Formik\n                    initialValues={{\n                        petName: '',\n                        petType: '',\n                        petDescription: '',\n                        skill1: '',\n                        skill2: \"\",\n                        skill3: \"\"\n                    }}\n                    validationSchema={SignupSchema}\n                    onSubmit={createPet}\n\n                >\n                    {({ errors, touched }) => (\n                        <Form className={styles.formAdd}>\n                            <label htmlFor=\"petName\">Pet Name: </label>\n                            <Field name=\"petName\" />\n                            {errors.petName && touched.petName ? (<div className={styles.errors}>{errors.petName}</div>) : null}\n\n                            <label htmlFor=\"petType\">Pet Type: </label>\n                            <Field name=\"petType\" />\n                            {errors.petType && touched.petType ? (<div className={styles.errors}>{errors.petType}</div>) : null}\n\n                            <label htmlFor=\"petDescription\">Description: </label>\n                            <Field name=\"petDescription\" type=\"text\" />\n                            {errors.petDescription && touched.petDescription ? <div className={styles.errors}>{errors.petDescription}</div> : null}\n                        \n\n                            <label htmlFor=\"skill1\">Skill 1: </label>\n                            <Field name=\"skill1\" type=\"text\" />\n                            {errors.skill1 && touched.skill1 ? (<div className={styles.errors}>{errors.skill1}</div>) : null}\n\n                            <label htmlFor=\"skill2\">Skill 2: </label>\n                            <Field name=\"skill2\" type=\"text\" />\n                            {errors.skill2 && touched.skill2 ? (<div className={styles.errors}>{errors.skill2}</div>) : null}\n\n\n                            <label htmlFor=\"skill3\">Skill 3: </label>\n                            <Field name=\"skill3\" type=\"text\" />\n                            {errors.skill3 && touched.skill3 ? (<div className={styles.errors}>{errors.skill3}</div>) : null}\n\n                            <button className={styles.addButton} type=\"submit\">Add Pet</button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n\n\n\n\n        </div>\n    )\n}\nexport default CreatePet;","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./ListPets.module.scss\"\n\nconst ListPets = () => {\n    const [petsList, setPetsList] = useState([]);\n    //const [isLoading, setIsLoading] = useState(true);\n\n    const getAllPets = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8000/pets\");\n            console.log(response.data.pets);\n            setPetsList(response.data.pets);\n          //  setIsLoading(false);\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n    useEffect(() => {\n        getAllPets();\n\n    }, []);\n\n\n    \n    return (\n        <div>\n            <Link className={styles.linkNav} to=\"/pets/new\"> add a pet to the shelter </Link>\n            <div className={styles.header}>\n                <h1>Pet Shelter</h1> \n                <h2>These pets are looking for a good home</h2>\n\n            </div>\n            \n\n            {\n                <table>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Acciones</th>\n                    </tr>\n                    {\n                        petsList?.map((pet, index) => (\n                            <tr key={pet._id}>\n                                <td>{pet.petName}</td>\n                                <td>{pet.petType}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>Details</Link>&nbsp;\n                                    <Link to={`/pets/${pet._id}/edit`}>Editar</Link>\n                                </td>\n                            </tr>\n                        )\n                        )\n                    }\n\n\n                </table>\n\n            }\n        </div>\n    )\n}\n\nexport default ListPets;","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport styles from \"./DetailsPet.module.scss\"\n\n\nconst DetailsPet = () => {\n    const { id } = useParams();\n    const [pet, setPet] = useState({});\n\n    const getPetById = async () => {\n        console.log(`id: ${id}`)\n        try {\n            const response = await axios.get(`http://localhost:8000/pets/${id}`);\n            console.log(`DetailsPet -  ${response.data}`);\n            setPet(response.data.pet);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        getPetById();\n    }, [id])\n\n\n\n    const deletePet = async (id) => {\n        console.log(id);\n        try {\n            const response = await axios.delete(`http://localhost:8000/pets/${id}`);\n            console.log(response);\n            Swal.fire({\n                title: \"Mascota Eliminado title\",\n                text: \"Mascota eliminado text\",\n                icon: \"success\"\n\n            });\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    return (\n        <div>\n            <Link className={styles.linkNav} to=\"/\">back to home</Link>\n\n            <div className={styles.header}>\n                <div>\n                    <h2>Pet Shelter</h2>\n                    <h2>Details about: {pet.petName} </h2>\n                </div>\n\n                <div>\n                    <button className={styles.detailsButton} onClick={() => deletePet(pet._id)}>Adopt {pet.petName}</button>\n                </div>\n\n            </div>\n\n            <div className={styles.detailPetContainer}>\n                <p>Pet Type:  {pet.petType} </p>\n                <p>Description:  {pet.petDescription} </p>\n                <div className={styles.skills}>\n                    <p>Skills: </p>\n                    <div>\n                        <p>{pet.skill1}</p>\n                        <p>{pet.skill2}</p>\n                        <p>{pet.skill3}</p>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default DetailsPet;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from 'formik';\nimport styles from \"./EditPet.module.scss\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\n\n\nconst EditPet = () => {\n    const { id } = useParams();\n    const [pet, setPet] = useState({});\n    const history = useHistory();\n\n    const getPetById = async () => {\n        console.log(`id: ${id}`);\n        try {\n            const response = await axios.get(`http://localhost:8000/pets/${id}`);\n            setPet(response.data.pet);\n            console.log(\"pet\", pet);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect\");\n        getPetById();\n    }, [id])\n\n\n    const SignupSchema = Yup.object().shape({\n        petName: Yup.string()\n            .min(3, 'Name debe tener dos caracteres como minimo')\n            .max(50, 'Nombre debe tener un maximo de 50 caracteres')\n            .required('Required'),\n        petType: Yup.string()\n            .min(3, 'Type debe tener dos caracteres como minimo')\n            .required('Este campo es requerido'),\n        petDescription: Yup.string()\n            .min(3, 'Descripcion debe tener 4 caracteres')\n            .required('Este campo es requerido'),\n        Skill1: Yup.string(),\n        Skill2: Yup.string(),\n        Skill3: Yup.string()\n\n    });\n\n\n    const editPet = async (values) => {\n        console.log(`createPet values: ${values}`);\n        try {\n            const response = await axios.put(`http://localhost:8000/pets/${id}`, values);\n            console.log(`response: ${response.petName}`);\n            Swal.fire({\n                title: \"Mascota editada satisfactoriamente\",\n                text: `Bienvenido `,\n                icon: \"success\",\n                confirmButtonText: \"Cool\"\n            });\n            history.push(\"/\");\n        } catch (err) {\n            console.log(err.response.data.err.message);\n            Swal.fire({\n                title: \"Error!\",\n                text: `${err.response.data.err.message}`,\n                icon: \"error\",\n                confirmButtonText: \"Not Cool\"\n            }\n            )\n        }\n    }\n\n\n    return (\n        <div>\n            <Link className={styles.linkNav} to=\"/\">back to home</Link>\n            <div className={styles.header}>\n                <h1>Pet Shelter</h1>\n                <h2>Edit {pet.petName}</h2>\n            </div>\n\n\n            <div className={styles.editPetContainer}>\n                {\n\n                    pet && (\n                        <Formik className={styles.formAdd}\n                            enableReinitialize={true}\n                            initialValues={pet}\n                            validationSchema={SignupSchema}\n                            onSubmit={editPet}\n\n                        >\n                            {({ errors, touched }) => (\n                                <Form className={styles.formAdd}>\n                                    <label htmlFor=\"petName\">Pet Name: </label>\n                                    <Field name=\"petName\" />\n                                    {errors.petName && touched.petName ? (<div className={styles.errors}>{errors.petName}</div>) : null}\n\n                                    <label htmlFor=\"petType\">Pet Type: </label>\n                                    <Field name=\"petType\" />\n                                    {errors.petType && touched.petType ? (<div className={styles.errors}>{errors.petType}</div>) : null}\n\n                                    <label htmlFor=\"petDescription\">Description: </label>\n                                    <Field name=\"petDescription\" type=\"text\" />\n                                    {errors.petDescription && touched.petDescription ? <div className={styles.errors}>{errors.petDescription}</div> : null}\n\n\n                                    <label htmlFor=\"skill1\">Skill 1: </label>\n                                    <Field name=\"skill1\" type=\"text\" />\n                                    {errors.skill1 && touched.skill1 ? (<div className={styles.errors}>{errors.skill1}</div>) : null}\n\n                                    <label htmlFor=\"skill2\">Skill 2: </label>\n                                    <Field name=\"skill2\" type=\"text\" />\n                                    {errors.skill2 && touched.skill2 ? (<div className={styles.errors}>{errors.skill2}</div>) : null}\n\n\n                                    <label htmlFor=\"skill3\">Skill 3: </label>\n                                    <Field name=\"skill3\" type=\"text\" />\n                                    {errors.skill3 && touched.skill3 ? (<div className={styles.errors}>{errors.skill3}</div>) : null}\n\n                                    <button  className={styles.addButton} type=\"submit\">Edit Pet</button>\n                                </Form>\n                            )}\n                        </Formik>\n                    )\n                }\n\n\n            </div>\n\n\n\n\n\n\n        </div>\n    )\n}\nexport default EditPet;","import './App.css';\nimport CreatePet from './views/CreatePet';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ListPets from './views/ListPets';\nimport DetailsPet from './views/DetailsPet';\nimport EditPet from './views/EditPet';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n              <ListPets></ListPets>\n          </Route>\n\n          <Route exact path=\"/pets/new\">\n            <CreatePet></CreatePet>\n          </Route>\n\n          <Route exact path=\"/pets/:id\">\n            <DetailsPet></DetailsPet>\n          </Route>\n\n          <Route exact path=\"/pets/:id/edit\">\n            <EditPet></EditPet>\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailPetContainer\":\"DetailsPet_detailPetContainer__VtopU\",\"detailsButton\":\"DetailsPet_detailsButton__1E2HD\",\"encabezado\":\"DetailsPet_encabezado__2w2BG\",\"skills\":\"DetailsPet_skills__2_b1t\",\"linkNav\":\"DetailsPet_linkNav__2cNxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkNav\":\"ListPets_linkNav__351G4\"};"],"sourceRoot":""}